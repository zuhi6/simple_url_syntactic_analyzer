prepisali sme BNF na gramatiku

PROJEKT#2- simpleURL
simpleURL je jazyk pre zápis URL

url := httpaddress | ftpaddress | telnetaddress | mailtoaddress.
httpaddress := "http://" hostport ["/" path] ["?" search].
ftpaddress := "ftp://" login "/" path.
telnetaddress := "telnet://" login.
mailtoaddress := "mailto::" xalphas "@" hostname.
login := [user [":" password ] "@" ] hostport.
hostport := hostname [":" port].
hostname := xalphas {"." xalphas}.
port := digits.
path := segment {"/" segment}.
search := xalphas {"+" xalphas}.
user := xalphas.
password := xalphas.
segment := {xalpha}.
xalphas := xalpha {xalpha}.
xalpha := alpha | digit.
digits := digit {digit}.
alpha := "A" | .. | "Z" | "a" | .. | "z".
digit := "0" | .. | "9".


Neterminály

A = url
B = httpaddress
C = ftpaddress
D = telnetaddress
E = mailtoaddress
F = login
G = hostport
H = hostname
I = port
J = path
K = search
L = user
M = password
N = segment
O = xalphas
P = xalpha
R = digits
S = alpha
T = digit

Grammar

J a K - moze sa v B nenachadzat osetrit v tychto pravidlach
v F osetrit aby vsetko po zavinac nemuselo existovat
v G zapezpecit aby mohlo byt vygenerovane len H
v H zapezpecit aby .O mohlo byt vygenerovane 0-n krat
v J zapezpecit aby / N mohlo byt generovane 0-n krat
v K zapezpecit aby mohlo byt + O generovane 0-n krat
v N zapezpecit aby P bolo generovane 0-n krat
v O zapezpecit aby druhe P bolo mozne generovat 0-n krat
v R zapezpecit aby druhe T bolo mozne generovat 0-n krat


A -> B | C | D | E
B -> http://GB`
B`-> /JB`` | ?K | epsilon
B``-> ?K | epsilon
C -> ftp://F/J
D -> telnet://F
E -> mailto::O@H
F -> LF`@G
F` -> :M | epsilon
G -> HG`
G`-> :I | epsilon
H -> OH`
H`-> .OH` | epsilon
I -> R
J -> NJ`
J`-> /NJ` | epsilon
K -> OK`
K`-> +OK` | epsilon
L -> O
M -> O
N -> N` 
N`-> PN` | epsilon
O -> PO`
O`-> PO` | epsilon
P -> S | T
R -> TR`
R`-> TR` | epsilon
S -> [A-Za-z]
T -> [0-9]


Odstranenie pravidiel I L M kedže isli do neterminalu a nahradili sme ich vyskyt
tymto neterminalom


A -> B | C | D | E
B -> http://GB`
B`-> /JB`` | ?K | epsilon
B``-> ?K | epsilon
C -> ftp://F/J
D -> telnet://F
E -> mailto::O@H
F -> OF`@G
F` -> :O | epsilon
G -> HG`
G`-> :R | epsilon
H -> OH`
H`-> .OH` | epsilon
J -> NJ`
J`-> /NJ` | epsilon
K -> OK`
K`-> +OK` | epsilon
N -> PN | epsilon
O -> PO`
O`-> PO` | epsilon
P -> S | T
R -> TR`
R`-> TR` | epsilon
S -> [A-Za-z]
T -> [0-9]

Prepis na jendoduchsie neterminaly

A -> http://FB | ftp://D/J | telnet://D | mailto::O@H
B -> /JC | ?L | epsilon
C -> ?L | epsilon 
D -> OE@F
E -> :O | epsilon
F -> HG
G -> :R | epsilon
H -> OI
I-> .OI | epsilon
J -> NK
K -> /NK | epsilon
L -> OM
M -> +OM | epsilon
N -> QN | epsilon
O -> QP
P -> QP | epsilon
Q -> U | T
R -> TS
S -> TS | epsilon
T -> [0-9]
U -> [A-Za-z]


First(T) = {[0-9]}
First(U) = {[A-Za-z]}
First(S) = {[0-9], epsilon}
First(R) = {[0-9]}
First(Q) = {[0-9], [A-Za-z]}
FIrst(P) = {[0-9], [A-Za-z], epsilon}
First(O) = {[0-9], [A-Za-z]}
First(N) = {[0-9], [A-Za-z], epsilon}
First(M) = {+, epsilon}
First(L) = {[0-9], [A-Za-z]}
First(K) = {/, epsilon}
First(J) = First(N) \ epsilon && First(K) = {[0-9], [A-Za-z], /, epsilon}
First(I) = {., epsilon}
First(H) = {[0-9], [A-Za-z]}
First(G) = {:, epsilon}
First(F) = {[0-9], [A-Za-z]}
First(E) = {:, epsilon}
First(D) = {[0-9], [A-Za-z]}
First(C) = {?, epsilon}
First(B) = {/, ? , epsilon}
First(A) = {h, f, t, m}


Follow(A) = {$}
Follow(B) = {$}
Follow(C) = {$}
Follow(D) = {$, /}
Follow(E) = {@}
Follow(F) = {$, /, ?}
Follow(G) = {$, /, ?}
Follow(H) = {:, /, $, ?}
Follow(I) = {:, /, $, ?}
Follow(J) = {$, ?}
Follow(K) = {$, ?}
Follow(L) = {$}
Follow(M) = {$}
Follow(N) = {/, ? , $}
Follow(O) = {@, :, ., /, $, ?, +}
Follow(P) = {@, :, ., /, $, ?, +}
Follow(Q) = {[0-9], [A-Za-z], /, ?, $, @, :, ., +}
Follow(R) = {$, /, ?}
Follow(S) = {$, /, ?}
Follow(U) = {[0-9], [A-Za-z], /, ?, $, @, :, ., +}
Follow(T) = {[0-9], [A-Za-z], /, ?, $, @, :, ., +}



Pravidlo A
1 : http://FB 
2 : ftp://D/J
3 : telnet://D
4 : mailto::O@H
Pravidlo B
5 : /JC
6 : ?L
7 : epsilon
Pravidlo C
8 : ?L
9 : epsilon
Pravidlo D
10 : OE@F
Pravidlo E
11 : :O
12 : epsilon
Pravidlo F
13 : HG
Pravidlo G
14 : :R
15 : epsilon
Pravidlo H
16 : OI
Pravidlo I
17 : .OI
18 : epsilon
Pravidlo J
19 : NK
Pravidlo K
20 : /NK
21 : epsilon
Pravidlo L
22 : OM
Pravidlo M
23 : +OM
24 : epsilon
Pravidlo N
25 : QN
26 : epsilon
Pravidlo O
27 : QP
Pravidlo P
28 : QP
29 : epsilon
Pravidlo Q
30 : U
31 : T
Pravidlo R
32 : TS
Pravidlo S
33 : TS
34 : epsilon
Pravidlo T
35 : [0-9]
Pravidlo U
36 : [A-Za-z]